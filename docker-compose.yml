version: "3.8"

services:

  db:
    build:
      context: ./Work_with_DB_first
      dockerfile: dockerfile
    container_name: db_with_info
    environment:
      POSTGRES_USER: car_dealer_user
      POSTGRES_PASSWORD: "!322@VTB"
      POSTGRES_DB: car_dealer
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5433:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./createDB.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U car_dealer_user -d car_dealer -h 0.0.0.0"]
      interval: 2s
      timeout: 5s
      retries: 10
    networks:
      - app_network 

  server:
    build:
      context: .
      dockerfile: dockerfile
    container_name: go_server
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db_with_info
      DB_PORT: 5432
      DB_USER: car_dealer_user
      DB_PASSWORD: "!322@VTB"
      DB_NAME: car_dealer
      DB_SSLMODE: "disable" 
      SERVER_IP: "0.0.0.0"   
      SERVER_PORT: "8080"  
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s  
    networks:
      - app_network 


networks:
  app_network:
    driver: bridge  

volumes:
  db-data: {}
